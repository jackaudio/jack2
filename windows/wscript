#! /usr/bin/env python
# encoding: utf-8

import Build
import re
import os

def configure(conf):
    conf.check_cc(function_name='Pa_GetVersion', header_name='portaudio.h', lib='portaudio', uselib_store="PORTAUDIO", define_name='HAVE_PORTAUDIO')
    conf.env['BUILD_DRIVER_PORTAUDIO'] = conf.is_defined('HAVE_PORTAUDIO')

def create_jack_driver_obj(bld, target, sources, uselib = None):
    driver = bld(features = ['c', 'cxx', 'cxxshlib', 'cshlib'])
    driver.env['cxxshlib_PATTERN'] = 'jack_%s.dll'

    driver.defines = ['HAVE_CONFIG_H','SERVER_SIDE']

    driver.includes = ['.', '../windows', '../posix', '../common', '../common/jack', '../']
    driver.target = target
    driver.source = sources
    driver.install_path = '${ADDON_DIR}/'
    driver.use = ['serverlib']
    if uselib:
        driver.use += uselib
    return driver

def build(bld):
    if bld.env['BUILD_JACKD'] == True:
        jackd = bld(features = ['cxx', 'cxxprogram'])
        jackd.includes = ['../windows', '../posix', '../common/jack', '../common', '../']
        jackd.defines = ['HAVE_CONFIG_H','SERVER_SIDE']
        jackd.source = ['../common/Jackdmp.cpp']
        jackd.use = ['serverlib']
        jackd.use += ['PTHREAD', 'M', 'STDC++']
        jackd.target = 'jackd'

    create_jack_driver_obj(bld, 'dummy', '../common/JackDummyDriver.cpp')

    create_jack_driver_obj(bld, 'net', '../common/JackNetDriver.cpp')

    create_jack_driver_obj(bld, 'loopback', '../common/JackLoopbackDriver.cpp')

    create_jack_driver_obj(bld, 'netone', [ '../common/JackNetOneDriver.cpp',
                                            '../common/netjack.c',
                                            '../common/netjack_packet.c' ], ["SAMPLERATE", "CELT"])

    create_jack_driver_obj(bld, 'portaudio', [ 'portaudio/JackPortAudioDevices.cpp',
                                               'portaudio/JackPortAudioDriver.cpp'], ['PORTAUDIO'])

    create_jack_driver_obj(bld, 'winmme', [
        'winmme/JackWinMMEDriver.cpp',
        'winmme/JackWinMMEInputPort.cpp',
        'winmme/JackWinMMEOutputPort.cpp',
        'winmme/JackWinMMEPort.cpp'
    ])

